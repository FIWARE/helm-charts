apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lepus.fullname" . }}
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    {{ include "lepus.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  strategy:
  {{- with .Values.deployment.updateStrategy }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "lepus.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
     metadata:
      labels:
        {{ include "lepus.labels" . | nindent 8 }}
        {{- with .Values.deployment.additionalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.deployment.additionalAnnotations -}}
      annotations:
        {{- with .Values.deployment.additionalAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "lepus.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
          ports:
            - name: http
              containerPort: {{ .Values.port}}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
          env:
            - name: USER_CONTEXT_URL
              value: {{ .Values.user-context.url | quote }}
            - name: CORE_CONTEXT_URL
              value: {{ .Values.core-context.url | quote }}
            - name: LEPUS_PORT
              value: {{ .Values.port | quote }}
            - name: LEPUS_ALIAS
              value: {{ .Values.lepus.alias | quote }}
            - name: LEPUS_RELAY_TIMEOUT
              value: {{ .Values.lepus.timeout | quote }}
            - name: LEPUS_URL
              value: {{ .Values.lepus.url | quote }}
            - name: LEPUS_MULTI_CORE
              value: {{ .Values.debug | quote }}
            - name: NGSI_V2_TIMEOUT
              value: {{ .Values.orion.timeout | quote }}
            - name: NGSI_V2_CONTEXT_BROKER
              value:  {{ .Values.orion.url | quote }}
            - name: NOTIFICATION_RELAY_URL
              value: {{ .Values.notification.url | quote }}
            {{- with .Values.additionalEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
status: {}
