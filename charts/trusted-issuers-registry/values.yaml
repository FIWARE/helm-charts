## Default values for tir.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

# -- option to override the name config in the _helpers.tpl
nameOverride: ""
# -- option to override the fullname config in the _helpers.tpl
fullnameOverride: ""

# -- configuration used by the application
tir:
  # -- additional properties that shall be added to the application config
  additionalConfigs:
  #  loggers:
  #    levels:
  #      ROOT: INFO
  # -- configuration necessary for accessing the backing NGSI LD broker
  ngsiBroker:
    # -- URL of the NGSI LD broker
    url: http://broker:1026
    # -- path to the API
    path: ngsi-ld/v1
    # -- timeout to apply when communicating with broker
    timeout: 30s
    # -- Context file to be used in NGSI LD
    contextUrl: "https://registry.lab.gaia-x.eu/development/api/trusted-shape-registry/v1/shapes/jsonld/trustframework#"
  # -- configuation needed for the iShare Satellite functionality
  satellite:
    # -- Client-ID/EORI of satellite
    id: "EU.EORI.FIWARESATELLITE"
    # -- Private key of satellite
    key: |
      -----BEGIN RSA PRIVATE KEY-----
      <Satellite private key>
      -----END RSA PRIVATE KEY-----
    # -- Certificate chain of satellite
    certificate: |
      -----BEGIN CERTIFICATE-----
      <Satellite certificate>
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      <Intermediate certificates>
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      <Root CA certificate>
      -----END CERTIFICATE-----
    # -- Configuration of CA trusted list
    trustedList:
      - name: FIWARE_CA
        crt: |
          -----BEGIN CERTIFICATE-----
          <FIWARETEST-CA Certificate>
          -----END CERTIFICATE-----
    # -- Configuration of parties (trusted participants)      
    parties:
      - id: "EU.EORI.NLPACKETDEL"
        name: "Packet Delivery Company"
        status: "Active"
        start_date: "2021-09-27T00:00:00Z"
        end_date: "2051-09-27T00:00:00Z"
        crt: |
          -----BEGIN CERTIFICATE-----
          <Packet Delivery Company Certificate>
          -----END CERTIFICATE-----
        capability_url: "https://idp.packetdel.com/capabilities" # Optional
        certifications: # Optional
          - role: "IdentityProvider"
            start_date: "2021-09-27T00:00:00Z"
            end_date: "2051-09-27T00:00:00Z"
            loa: 3

# -- Configuration for the Credential Config Service initiation
ccs:
  # -- Endpoint of the CCS (uncomment endpoint for initial CCS config creation)
  #endpoint: "http://credentials-config-service:8080/"
  # -- Id of the service
  id: "dod-registry"
  # -- Credential configuration to be registered
  credentials:
    - type: "VerifiableCredential"
      trustedParticipantsLists: [
        "https://tir.fiware.dev"
      ]
      trustedIssuersLists: [
        "https://til.fiware.dev"
      ]
  # -- Credential configurations for particular scopes
  scopes:
    didRead:
      - type: "ParticipantRegistryCredential"
        trustedParticipantsLists: [
          "https://tir.fiware.dev"
        ]
        trustedIssuersLists: [
          "https://til.fiware.dev"
        ]
            
## configuration for the k8s service to access tir
service:
  # -- service type
  type: ClusterIP
  # -- port to be used by the service
  port: 8080
  # -- additional annotations, if required
  annotations: {}

# -- if a tir specific service account should be used, it can be configured here
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- specifies if the account should be created
  create: false

## deployment specific configuration
deployment:
  # -- initial number of target replications, can be different if autoscaling is enabled
  replicaCount: 1
  # -- number of old replicas to be retained
  revisionHistoryLimit: 3
  ## configuration of the tir update strategy
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 1
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 0
  ## configuration of the image to be used
  image:
    # -- tir image name
    # ref: https://quay.io/repository/fiware/trusted-issuers-registry
    repository: quay.io/fiware/trusted-issuers-registry
    # -- tag of the image to be used
    tag: 0.3.0
    # -- specification of the image pull policy
    pullPolicy: IfNotPresent
  # -- additional labels for the deployment, if required
  additionalLabels: {}
  # -- additional annotations for the deployment, if required
  additionalAnnotations: {}
  ## tir resource requests and limits, we leave the default empty to make that a concious choice by the user.
  ## for the autoscaling to make sense, you should configure this.
  resources: {}
    # limits:
      # cpu: 100m
      # memory: 128Mi
    # requests:
      # cpu: 100m
      # memory: 128Mi
  # -- selector template
  # ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  # -- tolerations template
  # ref: ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  # -- affinity template
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  # -- port to request health information at
  healthPort: 9090
  ## liveness and readiness probes
  # ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 31
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30

## pod autoscaling configuration, use for automatic scaling of the broker pods
autoscaling:
  #  -- should autoscaling be enabled for tir
  enabled: false
  # -- minimum number of running pods
  minReplicas: 1
  # -- maximum number of running pods
  maxReplicas: 10
  # -- metrics to react on
  metrics: []
  ## List of MetricSpecs to decide whether to scale
  # See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#metricspec-v2beta2-autoscaling
  # scaler targets to hold average cpu around 80%
  #- type: Resource
  #  resource:
  #    name: cpu
  #     target:
  #      type: Utilization
  #      averageUtilization: 80
  ## scaler targets to hold average memory around 80%
  #  - type: Resource
  #    resource:
  #      name: memory
  #      target:
  #        type: Utilization
  #        averageUtilization: 80

## openshift specific route definition. Will not work on plain k8s
route:
  ## -- should the deployment create openshift routes
  enabled: false
  # -- annotations to be added to the route
  annotations: {}
  # -- host to be used
  # host: localhost
  # -- tls configuration for the route
  tls: {}
  # termination: edge
  # configuration for creation of certificates, using cert-manager.
  certificate: {}
  # allows to specify the issuer to be used.
  # issuer:
  #   kind: ClusterIssuer
  #   name: letsencrypt-aws-prod  

## ingress configuration
ingress:
  # -- should there be an ingress to connect tir with the public internet
  enabled: false
  # -- annotations to be added to the ingress
  annotations: {}
    # kubernetes.io/ingress.class: "ambassador"
    ## example annotations, allowing cert-manager to automatically create tls-certs and forcing everything to use ssl.
    # kubernetes.io/tls-acme: "true"
    # ingress.kubernetes.io/ssl-redirect: "true"
  # -- all hosts to be provided
  hosts: []
    ## provide a hosts and the paths that should be available
    # - host: localhost
      # paths:
      # - /
  # -- configure the ingress' tls
  tls: []
    # - secretName: tir-tls
      # hosts:
        # - tir.fiware.org

# -- port that the tir container uses
port: 8080

## configuration for prometheus montioring
prometheus:
  # -- should prometheus scrape be enabled
  enabled: true
  # -- path for prometheus scrape
  path: /prometheus
  # -- port prometheus scrape is available at
  port: 9090

# -- a list of additional env vars to be set, check the tir docu for all available options
additonalEnvVars: []



