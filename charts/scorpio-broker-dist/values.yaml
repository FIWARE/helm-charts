## namespace for deployment
namespace: scorpio-broker
################################### Eureka Server #######################################################################
eureka:
## Enable the eureka deployment & service
  enabled: true 
  name: eureka
## Custom Label value  
  eurekaLabel: eureka  
## Number of eureka instances to deploy
##
  replicas: 1

  service:      
  # -- service type
    type: NodePort
  # -- port to be used by the service
    port: 8761
  # -- port to be used by the service
    nodePort: 30000


  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
## Scorpio Broker eureka image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes. 
  image:        
   repository: scorpiobroker/scorpio
   tag: eureka-server_1.16.0
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
# -- specification of the image pull policy
   pullPolicy: Always

## eureka containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi
  
## eureka containers'  readiness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  readinessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10

## eureka containers'  liveness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  livenessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10      
 
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""
## ref: https://pracucci.com/graceful-shutdown-of-kubernetes-pods.html
  terminationGracePeriodSeconds: 30

## Enable HPA for eureka
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # --  minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   # --  average CPU usage across all the pods exceeds 80%, HPA will spin up additional pods.
   targetCPUUtilizationPercentage: 80

################################### Gateway ##########################################################################
gateway:
## Enable the gateway deployment & service
  enabled: true 
  name: gateway
## Custom label value
  gatewayLabel: gateway  
## Number of gateway instances to deploy
##
  replicas: 1

  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
## Scorpio Broker gateway image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes.
  image:       
   repository: scorpiobroker/scorpio
   tag: gateway_1.16.0
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

## gateway containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi
  
## gateway containers'  readiness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  eurekaAddress: http://eureka:8761/eureka/apps/GATEWAY/$HOSTNAME:gateway:9090/status?value=OUT_OF_SERVICE
  readinessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10

## gateway containers'  liveness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  livenessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10      
 
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for gateway
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # --  minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80

################################### AtContextServer ##########################################################################
atContextServer:
## Enable the AtContextServer deployment & service
  enabled: true 
  name: at-context-server
## Custom label value
  contextLabel: at-context-server  
## Number of AtContextServer instances to deploy
#
  replicas: 1
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
## Scorpio Broker AtContextServer image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes.
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio       
   repository: scorpiobroker/scorpio
   # -- tag of the image to be used
   tag: AtContextServer_1.16.0
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

## AtContextServer containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi
  
## AtContextServer containers'  readiness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  eurekaAddress : http://eureka:8761/eureka/apps/ATCONTEXT-SERVER/$HOSTNAME:atcontext-server:27015/status?value=OUT_OF_SERVICE
  readinessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10

## AtContextServer containers'  liveness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  livenessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10      
 
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for AtContextServer
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80
   
################################### ConfigServer ##########################################################################
configServer:
## Enable the configServer deployment & service
  enabled: true 
  name: config-server
## Custom label value
  configLabel: config-server
  
## Number of configServer instances to deploy
##
  replicas: 1
## Scorpio Broker configServer image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes. 
##
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
  ## configuration of the image to be used
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio       
   repository: scorpiobroker/scorpio
   # -- tag of the image to be used
   tag: config-server_1.16.0
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

## configServer containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi
  
## configServer containers'  readiness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  eurekaAddress: http://eureka:8761/eureka/apps/CONFIGSERVER/$HOSTNAME:configserver:8888/status?value=OUT_OF_SERVICE
  readinessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10

## ConfigServer containers'  liveness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  livenessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10      
 
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for ConfigServer
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80
   
################################### EntityManager ##########################################################################
entityManager:
## Enable the entityManager deployment & service
  enabled: true 
  name: entity-manager
## Custom label value
  entityLabel: entity-manager
  
## Number of entityManager instances to deploy
##
  replicas: 1
## Scorpio Broker entityManager image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes. 
##
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
  ## configuration of the image to be used
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio       
   repository: scorpiobroker/scorpio
   # -- tag of the image to be used
   tag: EntityManager_1.16.0
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

## entityManager containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi
  
## entityManager containers'  readiness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  eurekaAddress: http://eureka:8761/eureka/apps/ENTITY-MANAGER/$HOSTNAME:entity-manager:1025/status?value=OUT_OF_SERVICE
  readinessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10

## EntityManager containers'  liveness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  livenessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10      
 
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for EntityManager
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80
   
################################### HistoryManager ##########################################################################
historyManager:
## Enable the HistoryManager deployment & service
  enabled: true 
  name: history-manager
## Custom label value
  historyLabel: history-manager
  
## Number of HistoryManager instances to deploy
##
  replicas: 1
## Scorpio Broker HistoryManager image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes. 
##
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
  ## configuration of the image to be used
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio        
   repository: scorpiobroker/scorpio
   # -- tag of the image to be used
   tag: HistoryManager_1.16.0
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

## HistoryManager containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi
  
## HistoryManager containers'  readiness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  eurekaAddress: http://eureka:8761/eureka/apps/HISTORY-MANAGER/$HOSTNAME:history-manager:1040/status?value=OUT_OF_SERVICE
  readinessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10

## HistoryManager containers'  liveness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  livenessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10      
 
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for HistoryManager
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80

################################### QueryManager ##########################################################################
queryManager:
## Enable the QueryManager deployment & service
  enabled: true 
  name: query-manager
## Custom label value
  queryLabel: query-manager
  
## Number of QueryManager instances to deploy
##
  replicas: 1
## Scorpio Broker QueryManager image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes. 
##
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
  ## configuration of the image to be used
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio       
   repository: scorpiobroker/scorpio
   # -- tag of the image to be used
   tag: QueryManager_1.16.0
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

## QueryManager containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi
  
## QueryManager containers'  readiness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  eurekaAddress: http://eureka:8761/eureka/apps/QUERY-MANAGER/$HOSTNAME:query-manager:1026/status?value=OUT_OF_SERVICE
  readinessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10

## QueryManager containers'  liveness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  livenessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10      
 
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for QueryManager
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80
   
################################### RegistryManager ##########################################################################
registryManager:
## Enable the RegistryManager deployment & service
  enabled: true 
  name: registry-manager
## Custom label value
  registryLabel: registry-manager
  
## Number of RegistryManager instances to deploy
##
  replicas: 1
## Scorpio Broker RegistryManager image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes. 
##
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
  ## configuration of the image to be used
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio       
   repository: scorpiobroker/scorpio
   # -- tag of the image to be used
   tag: RegistryManager_1.16.0
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

## RegistryManager containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi
  
## RegistryManager containers'  readiness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  eurekaAddress: http://eureka:8761/eureka/apps/C-SOURCES/$HOSTNAME:c-sources:1030/status?value=OUT_OF_SERVICE
  readinessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10

## RegistryManager containers'  liveness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  livenessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10      
 
## Pod Security Context
## ref: https://kuberne\tes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for RegistryManager
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80

################################### StorageManager ##########################################################################
storageManager:
## Enable the StorageManager deployment & service
  enabled: true 
  name: storage-manager
## Custom label value
  storageLabel: storage-manager
  
## Number of StorageManager instances to deploy
##
  replicas: 1
## Scorpio Broker StorageManager image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes. 
##
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
  ## configuration of the image to be used
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio       
   repository: scorpiobroker/scorpio
   # -- tag of the image to be used
   tag: StorageManager_1.16.0
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

## StorageManager containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi
  
## StorageManager containers'  readiness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  eurekaAddress: http://eureka:8761/eureka/apps/STORAGE-MANAGER/$HOSTNAME:storage-manager:1029/status?value=OUT_OF_SERVICE
  readinessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10

## StorageManager containers'  liveness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  livenessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10      
 
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for StorageManager
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80
   

################################### SubscriptionManager ##########################################################################
subscriptionManager:
## Enable the SubscriptionManager deployment & service
  enabled: true 
  name: subscription-manager
## Custom label value
  subscriptionLabel: subscription-manager
  
## Number of SubscriptionManager instances to deploy
##
  replicas: 1
## Scorpio Broker SubscriptionManager image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes. 
##
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
  ## configuration of the image to be used
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio       
   repository: scorpiobroker/scorpio
   # -- tag of the image to be used
   tag: SubscriptionManager_1.16.0
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

## SubscriptionManager containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi
  
## SubscriptionManager containers'  readiness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  eurekaAddress: http://eureka:8761/eureka/apps/SUBSCRIPTION-MANAGER/$HOSTNAME:subscription-manager:2025/status?value=OUT_OF_SERVICE
  readinessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10
 
## SubscriptionManager containers'  liveness probes. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
  livenessProbe:
   enabled: true
   initialDelaySeconds: 40
   failureThreshold: 6
   periodSeconds: 10   
    
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for SubscriptionManager
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80
