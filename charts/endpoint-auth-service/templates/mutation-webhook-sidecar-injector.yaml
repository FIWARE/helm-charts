{{- if .Values.sidecarInjector.enabled -}}
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ include "sidecarInjector.fullname" . }}
  labels:
    {{ include "sidecarInjector.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "1"
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "sidecarInjector.name" . }}-cert
webhooks:
  - name: {{ include "sidecarInjector.name" . }}.sfdc.internal
    {{- if .Values.sidecarInjector.restrictNamespace.enabled }}
    namespaceSelector:
      matchExpressions:
        - key: {{ .Values.sidecarInjector.restrictNamespace.label }}
          operator: In
          values: [ "{{ .Values.sidecarInjector.restrictNamespace.value }}" ]
    {{- end }}
    {{- if .Values.sidecarInjector.restrictObjects.enabled }}
    objectSelector:
      matchLabels:
        {{ .Values.sidecarInjector.restrictObjects.label }}: {{ .Values.sidecarInjector.restrictObjects.value }}
    {{- end }}
    clientConfig:
      service:
        name: {{ include "sidecarInjector.fullname" . }}
        namespace: {{ .Release.Namespace }}
        path: /mutate
      {{- if (eq .Values.sidecarInjector.certificate.type "inline") -}}
      caBundle: {{ .Values.sidecarInjector.cert | b64enc | replace "\n" "" }}
      {{- end }}
      {{- if (eq .Values.sidecarInjector.certificate.type "cert-manager") }}
      caBundle:
      {{- end }}
    rules:
      - apiGroups: [""]
        apiVersions: ["v1"]
        operations: ["CREATE"]
        resources: ["pods"]
    admissionReviewVersions: ["v1"]
    sideEffects: None
{{- end }}