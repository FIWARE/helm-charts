## Default values for til.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

# -- option to override the name config in the _helpers.tpl
nameOverride: ""
# -- option to override the fullname config in the _helpers.tpl
fullnameOverride: ""

## configuration for the k8s service to access til
service:
  # -- service type
  type: ClusterIP
  # -- port to be used by the service
  port: 8080
  # -- additional annotations, if required
  annotations: {}

# -- if a til specific service account should be used, it can be configured here
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- specifies if the account should be created
  create: false

## deployment specific configuration
deployment:
  # -- initial number of target replications, can be different if autoscaling is enabled
  replicaCount: 1
  # -- number of old replicas to be retained
  revisionHistoryLimit: 3
  ## configuration of the til update strategy
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 1
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 0
  ## configuration of the image to be used
  image:
    # -- til image name
    # ref: https://quay.io/repository/fiware/contract-management
    repository: quay.io/fiware/contract-management
    # -- tag of the image to be used
    tag: 1.0.0-PRE-1
    # -- specification of the image pull policy
    #pullPolicy: IfNotPresent
    pullPolicy: Always
  # -- additional labels for the deployment, if required
  additionalLabels: {}
  # -- additional annotations for the deployment, if required
  additionalAnnotations: {}
  ## til resource requests and limits, we leave the default empty to make that a concious choice by the user.
  ## for the autoscaling to make sense, you should configure this.
  # resources:
    # limits:
      # cpu: 100m
      # memory: 128Mi
    # requests:
      # cpu: 100m
      # memory: 128Mi
  # -- selector template
  # ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  # -- tolerations template
  # ref: ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  # -- affinity template
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  # -- port to request health information at
  healthPort: 9090
  ## liveness and readiness probes
  # ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 31
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30

## pod autoscaling configuration, use for automatic scaling of the broker pods
autoscaling:
  #  -- should autoscaling be enabled for til
  enabled: false
  # -- minimum number of running pods
  minReplicas: 1
  # -- maximum number of running pods
  maxReplicas: 10
  # -- metrics to react on
  metrics: []
  ## List of MetricSpecs to decide whether to scale
  # See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#metricspec-v2beta2-autoscaling
  # scaler targets to hold average cpu around 80%
  #- type: Resource
  #  resource:
  #    name: cpu
  #     target:
  #      type: Utilization
  #      averageUtilization: 80
  ## scaler targets to hold average memory around 80%
  #  - type: Resource
  #    resource:
  #      name: memory
  #      target:
  #        type: Utilization
  #        averageUtilization: 80

# -- port that the til container uses
port: 8080

## configuration for prometheus montioring
prometheus:
  # -- should prometheus scrape be enabled
  enabled: true
  # -- path for prometheus scrape
  path: /prometheus
  # -- port prometheus scrape is available at
  port: 9090

# -- a list of additional env vars to be set, check the til docu for all available options
additionalEnvVars: []

## Describes the configuration needed when adding entries to the Trusted Issuers List
til:
  ## Type of Verifiable Credential necessary for accessing the service
  credentialType: MyCredential
  ## Claims with permissions granted to given Verifiable Credential
  claims:
      ## DID of the target service that is requiring the permissions
      - target: "did:some:service"
        ## Roles that are added/allowed for the given service
        roles:
          - Consumer
          - Admin
## Configuration needed for accessing other services
services:
  ## Config for Trusted Issuers List
  til:
    ## Path to be used
    path: ""
    ## URL of the Trusted Issuers List Service
    url: http://trusted-issuers-list:8080
    ## Read timeout in sec
    read-timeout: 30
  ## Config for the TM Forum Service hosting the Product Ordering API
  product:
    ## Path to be used
    path: "/tmf-api/productOrderingManagement/v4"
    ## URL of the TM Forum Service hosting the Product Ordering API
    url: http://tm-forum-api-product-ordering-management:8080
    ## Read timeout in sec
    read-timeout: 30
  ## Config for the TM Forum Service hosting the Party API
  party:
    ## Path to be used
    path: "/tmf-api/party/v4"
    ## URL of the TM Forum Service hosting the Party API
    url: http://tm-forum-api-party-catalog:8080
    ## Read timeout in sec
    read-timeout: 30