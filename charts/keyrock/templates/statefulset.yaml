apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "keyrock.fullname" . }}
  labels:
    {{ include "keyrock.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "keyrock.fullname" . }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.statefulset.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.statefulset.revisionHistoryLimit }}
  updateStrategy:
  {{- with .Values.statefulset.updateStrategy }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "keyrock.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app: {{ include "keyrock.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "keyrock.fullname" . }}
        {{ include "keyrock.labels" . | nindent 8 }}
        {{- with .Values.statefulset.additionalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.statefulset.additionalAnnotations -}}
      annotations:
        {{- with .Values.statefulset.additionalAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    spec: 
      serviceAccountName: {{ include "keyrock.serviceAccountName" . }}
      {{- if .Values.theme.enabled }}
      initContainers:
        - name: {{ include "keyrock.fullname" . }}-theme-init
          image: {{ .Values.theme.image }}
          imagePullPolicy: {{ .Values.theme.imagePullPolicy }}
          volumeMounts:
            - name: themes-theme
              mountPath: {{ .Values.theme.sourceTheme }}
            - name: themes-img
              mountPath: {{ .Values.theme.sourceImg }}
            {{- if .Values.theme.sourceJavascript }}
            - name: themes-javascript
              mountPath: {{ .Values.theme.sourceJavascript }}
            {{- end }}
            {{- if .Values.theme.sourceFonts }}
            - name: themes-fonts
              mountPath: {{ .Values.theme.sourceFonts }}
            {{- end }}
            {{- if .Values.theme.sourceFavicon }}
            - name: themes-favicon
              mountPath: {{ .Values.theme.sourceFavicon }}
            {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          imagePullPolicy: {{ .Values.statefulset.image.pullPolicy }}
          image: "{{ .Values.statefulset.image.repository }}:{{ .Values.statefulset.image.tag }}"
          ports:
            - name: http
              containerPort: {{ .Values.port}}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.statefulset.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.statefulset.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.statefulset.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.statefulset.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.statefulset.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.statefulset.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.statefulset.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.statefulset.readinessProbe.timeoutSeconds }}
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.statefulset.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.statefulset.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.statefulset.startupProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.statefulset.startupProbe.timeoutSeconds }}
          {{- if or (.Values.theme.enabled) (.Values.certs.pvc.enabled) }}
          volumeMounts:
            {{- if .Values.theme.enabled }}
            - name: themes-theme
              mountPath: {{ .Values.theme.mountTheme }}
            - name: themes-img
              mountPath: {{ .Values.theme.mountImg }}
            {{- end }}
            {{- if .Values.theme.sourceJavascript }}
            - name: themes-javascript
              mountPath: {{ .Values.theme.mountJavascript }}
            {{- end }}
            {{- if .Values.theme.sourceFonts }}
            - name: themes-fonts
              mountPath: {{ .Values.theme.mountFonts }}
            {{- end }}
            {{- if .Values.theme.sourceFavicon }}
            - name: themes-favicon
              mountPath: {{ .Values.theme.mountFavicon }}
              subPath: "favicon.ico"
            {{- end }}
            {{- if .Values.certs.pvc.enabled }}
            - name: certs
              mountPath: /opt/fiware-idm/certs
            {{- end }}
          {{- end }}
          env:
            - name: IDM_PORT
              value: {{ .Values.port | quote }}
            - name: IDM_HOST
              value: {{ .Values.host }}
            - name: IDM_DB_HOST
              value: {{ .Values.db.host | quote }}
            - name: IDM_DB_PASS
              valueFrom:
                 secretKeyRef:
                   name: {{ include "keyrock.secretName" . }}
                   key: dbPassword
            - name: IDM_DB_USER
              value: {{ .Values.db.user | quote }}
            {{- if .Values.admin }}
            - name: IDM_ADMIN_USER
              value: {{ .Values.admin.user | quote }}
            - name: IDM_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "keyrock.secretName" . }}
                  key: adminPassword
            - name: IDM_ADMIN_EMAIL
              value: {{ .Values.admin.email | quote }}
            {{- end }}
            #will be handled by the ingress
            - name: IDM_HTTPS_ENABLED
              value: "false"
            - name: IDM_OIDC_JWT_ALGORITHM
              value: {{ .Values.certs.oidcJwtAlgorithm | quote }}
            {{- if .Values.theme.enabled }}
            - name: IDM_THEME
              value: {{ .Values.theme.name | quote }}
            {{- end }}
            {{- if .Values.authorisationRegistry.enabled }}
            - name: IDM_AR_ID
              value: {{ .Values.authorisationRegistry.identifier | quote }}
            - name: IDM_AR_URL
              value: {{ .Values.authorisationRegistry.url | quote }}
            - name: IDM_AR_TOKEN_ENDPOINT
              value: {{ .Values.authorisationRegistry.tokenEndpoint | quote }}
            - name: IDM_AR_DELEGATION_ENDPOINT
              value: {{ .Values.authorisationRegistry.delegationEndpoint | quote }}
            {{- end }}
            {{- if .Values.satellite.enabled }}
            - name: IDM_PR_ID
              value: {{ .Values.satellite.identifier | quote }}
            - name: IDM_PR_URL
              value: {{ .Values.satellite.url | quote }}
            - name: IDM_PR_TOKEN_ENDPOINT
              value: {{ .Values.satellite.tokenEndpoint | quote }}
            - name: IDM_PR_PARTIES_ENDPOINT
              value: {{ .Values.satellite.partiesEndpoint | quote }}
            {{- end }}
            {{- if .Values.token.enabled }}
            - name: IDM_PR_CLIENT_ID
              value: {{ .Values.token.identifier | quote }}
            - name: IDM_PR_CLIENT_KEY
              valueFrom:
                 secretKeyRef:
                   name: {{ include "keyrock.certSecretName" . }}
                   key: key
            - name: IDM_PR_CLIENT_CRT
              valueFrom:
                 secretKeyRef:
                   name: {{ include "keyrock.certSecretName" . }}
                   key: cert
            {{- end }}
            {{- with .Values.additionalEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.extraEnvVarsSecret }}
          envFrom:
            - secretRef:
                name: {{ tpl .Values.extraEnvVarsSecret . | quote }}
          {{- end }}
          resources:
            {{- toYaml .Values.statefulset.resources | nindent 12 }}
      {{- with .Values.statefulset.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.statefulset.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.statefulset.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or (.Values.theme.enabled) (.Values.certs.pvc.enabled) }}
      volumes:
      {{- if .Values.certs.pvc.enabled }}
        - name: certs
          persistentVolumeClaim:
            claimName: {{ include "keyrock.fullname" . }}-certs
      {{- end }}
      {{- if .Values.theme.enabled }}
        - name: themes-theme
          emptyDir: {}
        - name: themes-img
          emptyDir: {}
        {{- if .Values.theme.sourceJavascript }}
        - name: themes-javascript
          emptyDir: {}
        {{- end }}
        {{- if .Values.theme.sourceFonts }}
        - name: themes-fonts
          emptyDir: {}
        {{- end }}
        {{- if .Values.theme.sourceFavicon }}
        - name: themes-favicon
          emptyDir: {}
        {{- end }}
      {{- end }}
      {{- end }}
