{{- if .Values.sidecarInjector.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sidecarInjector.fullname" . }}
  labels:
    {{ include "sidecarInjector.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.sidecarInjector.replicaCount }}
  revisionHistoryLimit: {{ .Values.sidecarInjector.revisionHistoryLimit }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "sidecarInjector.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{ include "sidecarInjector.labels" . | nindent 8 }}
          {{- with .Values.sidecarInjector.additionalLabels }}
          {{- toYaml . | nindent 8 }}
          {{- end }}
      {{- if .Values.sidecarInjector.additionalAnnotations -}}
      annotations:
        {{- with .Values.sidecarInjector.additionalAnnotations }}
          {{- toYaml . | nindent 8 }}
          {{- end }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "sidecarInjector.serviceAccountName" . }}
      containers:
        - name: sidecar-injector
          image: "{{ .Values.sidecarInjector.image.repository }}:{{ .Values.sidecarInjector.image.tag }}"
          imagePullPolicy: {{ .Values.sidecarInjector.image.pullPolicy }}
          args:
            - --port={{ .Values.sidecarInjector.port }}
            - --certFile=/webhook/certs/tls.crt
            - --keyFile=/webhook/certs/tls.key
            - --injectPrefix={{ .Values.sidecarInjector.annotationNamespace }}
            - --injectName=request
            - --sidecarDataKey=envoy-sidecar
          ports:
            - name: https
              containerPort: {{ .Values.sidecarInjector.port }}
              protocol: TCP
          volumeMounts:
            - name: webhook-certs
              mountPath: /webhook/certs
              readOnly: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
            initialDelaySeconds: {{ .Values.sidecarInjector.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.sidecarInjector.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.sidecarInjector.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.sidecarInjector.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
            initialDelaySeconds: {{ .Values.sidecarInjector.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.sidecarInjector.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.sidecarInjector.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.sidecarInjector.readinessProbe.timeoutSeconds }}
          {{- with .Values.sidecarInjector.resources }}
          resources:
            {{- toYaml .Values.sidecarInjector.resources | nindent 12 }}
          {{- end }}
      {{- with .Values.sidecarInjector.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.sidecarInjector.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.sidecarInjector.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: webhook-certs
          secret:
            secretName: {{ include "sidecarInjector.name" . }}-secret
  {{- end }}