{{- $mongoPassword := include "api-umbrella.mongoPassword" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-umbrella.fullname" . }}
  labels:
    {{ include "api-umbrella.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  strategy:
  {{- with .Values.deployment.updateStrategy }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "api-umbrella.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{ include "api-umbrella.labels" . | nindent 8 }}
        {{- with .Values.deployment.additionalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.deployment.additionalAnnotations -}}
      annotations:
        {{- with .Values.deployment.additionalAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    spec: 
      serviceAccountName: {{ include "api-umbrella.serviceAccountName" . }}
      securityContext:
        runAsUser: 0
      serviceAccount: {{ include "api-umbrella.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
          command: ["api-umbrella"]
          args: ["run"]
          securityContext:
            privileged: true
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/api-umbrella/api-umbrella.yml
              subPath: api-umbrella.yml
            {{ if .Values.umbrella.jws.root_ca -}}
            - name: rootca-volume
              mountPath: /app/rootCA.pem
              subPath: rootCA.pem
            {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "api-umbrella.fullname" . }}
            items:
              - key: api-umbrella.yml
                path: api-umbrella.yml
        {{ if .Values.umbrella.jws.root_ca -}}
        - name: rootca-volume
          configMap:
            name: {{ include "api-umbrella.fullname" . }}-rootca
            items:
              - key: rootCA.pem
                path: rootCA.pem
        {{- end }}
          
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
