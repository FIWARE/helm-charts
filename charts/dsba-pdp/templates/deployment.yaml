apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dsba-pdp.fullname" . }}
  labels:
    {{ include "dsba-pdp.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  strategy:
  {{- with .Values.deployment.updateStrategy }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "dsba-pdp.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{ include "dsba-pdp.labels" . | nindent 8 }}
        {{- with .Values.deployment.additionalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.deployment.additionalAnnotations -}}
      annotations:
        prometheus.io/scrape: {{ .Values.prometheus.enabled | quote }}
        prometheus.io/path: {{ .Values.prometheus.path }}
        prometheus.io/port: {{ .Values.prometheus.port }}
        {{- with .Values.deployment.additionalAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    spec: 
      serviceAccountName: {{ include "dsba-pdp.serviceAccountName" . }}
      {{- if .Values.db.migrate.enabled }}
      initContainers:
        - name: db-migrate
          imagePullPolicy: {{ .Values.db.migrate.image.pullPolicy }}
          image: "{{ .Values.db.migrate.image.repository }}:{{ .Values.db.migrate.image.tag }}"
          env:
            - name: MYSQL_HOST
              value: {{ .Values.db.host | quote }}
            - name: MYSQL_PORT
              value: {{ .Values.db.port | quote }}
            - name: MYSQL_DATABASE
              value: {{ .Values.db.name | quote }}
            - name: MYSQL_USERNAME
              value: {{ .Values.db.username | quote }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "dsba-pdp.secretName" . }}
                  key: dbPassword
          volumeMounts:
            - name: cache-volume
              mountPath: /.cache/
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
          ports:
            - name: http
              containerPort: {{ .Values.port}}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
          env:
            - name: SERVER_PORT
              value: {{ .Values.port | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.deployment.logLevel | quote }}
            - name: ISHARE_ENABLED
              value: {{ .Values.deployment.ishare.enabled | quote }}
            - name: ISHARE_TRUSTED_LIST_ENABLED
              value: {{ .Values.deployment.ishare.trustedList | quote }}
            - name: ISHARE_CLIENT_ID
              value: {{ .Values.deployment.ishare.clientId | quote }}
            - name: ISHARE_AR_ID
              value: {{ .Values.deployment.ishare.ar.id | quote }}
            - name: ISHARE_AUTHORIZATION_REGISTRY_URL
              value: {{ .Values.deployment.ishare.ar.url | quote }}
            - name: ISHARE_DELEGATION_PATH
              value: {{ .Values.deployment.ishare.ar.delegationPath | quote }}
            - name: ISHARE_TOKEN_PATH
              value: {{ .Values.deployment.ishare.ar.tokenPath | quote }}
            - name: ISHARE_TRUSTED_FINGERPRINTS_LIST
              value: {{ include "dsba-pdp.ishareTrustedList" . | quote}}
            - name: ISHARE_TRUST_ANCHOR_URL
              value: {{ .Values.deployment.ishare.trustAnchor.url | quote }}
            - name: ISHARE_TRUST_ANCHOR_ID
              value: {{ .Values.deployment.ishare.trustAnchor.id | quote }}
            - name: ISHARE_TRUST_ANCHOR_TOKEN_PATH
              value: {{ .Values.deployment.ishare.trustAnchor.tokenPath | quote }} 
            - name: ISHARE_TRUST_ANCHOR_TRUSTED_LIST_PATH
              value: {{ .Values.deployment.ishare.trustAnchor.trustedListPath | quote }} 
            - name: ISHARE_TRUSTED_LIST_UPDATE_RATE
              value: {{ .Values.deployment.ishare.updateRate | quote }}
            - name: PROVIDER_ID
              value: {{ .Values.deployment.providerId | quote }}
            - name: TRUSTED_VERIFIERS
              value: {{ include "dsba-pdp.trustedVerifiers" . | quote}}
            - name: JWK_UPDATE_INTERVAL_IN_S
              value: {{ .Values.deployment.jwkUpdateInterval | quote }}
            {{- if .Values.db.enabled }}
            - name: MYSQL_HOST
              value: {{ .Values.db.host | quote }}
            {{- else }}
            # setting the host to empty configures the pdp to run with an in-memory repo
            - name: MYSQL_HOST
              value: ""
            {{- end}}
            - name: MYSQL_PORT
              value: {{ .Values.db.port | quote }}
            - name: MYSQL_DATABASE
              value: {{ .Values.db.name | quote }}
            - name: MYSQL_USERNAME
              value: {{ .Values.db.username | quote }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "dsba-pdp.secretName" . }}
                  key: dbPassword
            {{- with .Values.additionalEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.deployment.ishare.enabled }}
          volumeMounts:
            - name: ishare-secret
              mountPath: /iShare/
              readOnly: true
          {{- end }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
      {{- if or .Values.deployment.ishare.enabled .Values.db.migrate.enabled }}
      volumes:
      {{- end }}
      {{- if .Values.db.migrate.enabled }}
        - name: cache-volume
          emptyDir:
            sizeLimit: 500Mi
      {{- end }}
      {{- if .Values.deployment.ishare.enabled }}
        - name: ishare-secret
          secret:
            secretName: {{ include "dsba-pdp.ishareSecret" . }}
      {{- end }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}