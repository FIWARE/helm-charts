apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "tir.fullname" . }}
  labels:
    {{- include "tir.labels" . | nindent 4 }}
data:
  application.yaml: |-
    micronaut:
      server:
        port: {{ .Values.port }}          
      {{- if .Values.tir.security.enabled }}
      security:
        {{- with .Values.tir.security }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- else -}}
      security:
        enabled: false
      {{- end }}
      http:
        services:
          read-timeout: {{.Values.tir.ngsiBroker.timeout}}
          ngsi:
            path: {{.Values.tir.ngsiBroker.path}}
            url: {{.Values.tir.ngsiBroker.url}}
            read-timeout: {{.Values.tir.ngsiBroker.timeout}}
    satellite:
    {{- with .Values.tir.satellite }}
    {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tir.additionalConfigs }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
---
{{- if .Values.ccs.endpoint -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "tir.fullname" . }}-ccs
  labels:
    {{- include "tir.labels" . | nindent 4 }}
data:
  init.sh: |-
    curl -X 'POST' \
      '{{ .Values.ccs.endpoint }}service' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
      "id": "{{ .Values.ccs.id }}",
      "defaultOidcScope": "{{ .Values.ccs.defaultOidcScope }}",
      {{- if .Values.ccs.oidcScopes -}}
      "oidcScopes": {{- toJson .Values.ccs.oidcScopes }}
      {{- end }}
    }'
{{- end }}
